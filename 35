#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt plaintext using the one-time pad Vigenère cipher
void encrypt(char *plaintext, const int *key, int key_len) {
    int len = strlen(plaintext);
    for (int i = 0; i < len; ++i) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            plaintext[i] = ((plaintext[i] - base + key[i % key_len]) % 26) + base;
        }
    }
}

// Function to decrypt ciphertext using the one-time pad Vigenère cipher
void decrypt(char *ciphertext, const int *key, int key_len) {
    int len = strlen(ciphertext);
    for (int i = 0; i < len; ++i) {
        if (isalpha(ciphertext[i])) {
            char base = isupper(ciphertext[i]) ? 'A' : 'a';
            int shift = (ciphertext[i] - base - key[i % key_len] + 26) % 26;
            ciphertext[i] = shift + base;
        }
    }
}

int main() {
    char plaintext[] = "Hello, Vigenere!";
    int key[] = { 3, 19, 5 }; // Example key stream

    printf("Original plaintext: %s\n", plaintext);

    // Encrypt plaintext
    encrypt(plaintext, key, sizeof(key) / sizeof(key[0]));
    printf("Encrypted ciphertext: %s\n", plaintext);

    // Decrypt ciphertext
    decrypt(plaintext, key, sizeof(key) / sizeof(key[0]));
    printf("Decrypted plaintext: %s\n", plaintext);

    return 0;
}
OUTPUT:
Original plaintext: Hello, Vigenere!
Encrypted ciphertext: Kxqoh, Onjxshkj!
Decrypted plaintext: Hello, Vigenere!
